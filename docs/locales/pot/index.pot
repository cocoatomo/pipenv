# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017. A <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> Project
# This file is distributed under the same license as the pipenv package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pipenv 2018.6.26.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-26 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../index.rst:7
msgid "Pipenv: Python Dev Workflow for Humans"
msgstr ""

#: ../../index.rst:23
msgid "**Pipenv** is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. *Windows is a first-class citizen, in our world.*"
msgstr ""

#: ../../index.rst:25
msgid "It automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your ``Pipfile`` as you install/uninstall packages. It also generates the ever-important ``Pipfile.lock``, which is used to produce deterministic builds."
msgstr ""

#: ../../index.rst:27
msgid "Pipenv is primarily meant to provide users and developers of applications with an easy method to setup a working environment. For the distinction between libraries and applications and the usage of ``setup.py`` vs ``Pipfile`` to define dependencies, see :ref:`pipfile-vs-setuppy`."
msgstr ""

#: ../../index.rst:33
msgid "The problems that Pipenv seeks to solve are multi-faceted:"
msgstr ""

#: ../../index.rst:35
msgid "You no longer need to use ``pip`` and ``virtualenv`` separately. They work together."
msgstr ""

#: ../../index.rst:36
msgid "Managing a ``requirements.txt`` file `can be problematic <https://www.kennethreitz.org/essays/a-better-pip-workflow>`_, so Pipenv uses ``Pipfile`` and ``Pipfile.lock`` to separate abstract dependency declarations from the last tested combination."
msgstr ""

#: ../../index.rst:37
msgid "Hashes are used everywhere, always. Security. Automatically expose security vulnerabilities."
msgstr ""

#: ../../index.rst:38
msgid "Strongly encourage the use of the latest versions of dependencies to minimize security risks `arising from outdated components <https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities>`_."
msgstr ""

#: ../../index.rst:39
msgid "Give you insight into your dependency graph (e.g. ``$ pipenv graph``)."
msgstr ""

#: ../../index.rst:40
msgid "Streamline development workflow by loading ``.env`` files."
msgstr ""

#: ../../index.rst:44
msgid "Install Pipenv Today!"
msgstr ""

#: ../../index.rst:46
msgid "Just use pip::"
msgstr ""

#: ../../index.rst:50
msgid "Or, if you're using Ubuntu 17.10::"
msgstr ""

#: ../../index.rst:57
msgid "Otherwise, if you're on MacOS, you can install Pipenv easily with Homebrew::"
msgstr ""

#: ../../index.rst:61
msgid "‚ú®üç∞‚ú®"
msgstr ""

#: ../../index.rst:69
msgid "User Testimonials"
msgstr ""

#: ../../index.rst:72
msgid "**Jannis Leidel**, former pip maintainer‚Äî"
msgstr ""

#: ../../index.rst:72
msgid "*Pipenv is the porcelain I always wanted to build for pip. It fits my brain and mostly replaces virtualenvwrapper and manual pip calls for me. Use it.*"
msgstr ""

#: ../../index.rst:75
msgid "**David Gang**‚Äî"
msgstr ""

#: ../../index.rst:75
msgid "*This package manager is really awesome. For the first time I know exactly what my dependencies are which I installed and what the transitive dependencies are. Combined with the fact that installs are deterministic, makes this package manager first class, like cargo*."
msgstr ""

#: ../../index.rst:78
msgid "**Justin Myles Holmes**‚Äî"
msgstr ""

#: ../../index.rst:78
msgid "*Pipenv is finally an abstraction meant to engage the mind instead of merely the filesystem.*"
msgstr ""

#: ../../index.rst:81
msgid "‚ò§ Pipenv Features"
msgstr ""

#: ../../index.rst:83
msgid "Enables truly *deterministic builds*, while easily specifying *only what you want*."
msgstr ""

#: ../../index.rst:84
msgid "Generates and checks file hashes for locked dependencies."
msgstr ""

#: ../../index.rst:85
msgid "Automatically install required Pythons, if ``pyenv`` is available."
msgstr ""

#: ../../index.rst:86
msgid "Automatically finds your project home, recursively, by looking for a ``Pipfile``."
msgstr ""

#: ../../index.rst:87
msgid "Automatically generates a ``Pipfile``, if one doesn't exist."
msgstr ""

#: ../../index.rst:88
msgid "Automatically creates a virtualenv in a standard location."
msgstr ""

#: ../../index.rst:89
msgid "Automatically adds/removes packages to a ``Pipfile`` when they are un/installed."
msgstr ""

#: ../../index.rst:90
msgid "Automatically loads ``.env`` files, if they exist."
msgstr ""

#: ../../index.rst:92
msgid "The main commands are ``install``, ``uninstall``, and ``lock``, which generates a ``Pipfile.lock``. These are intended to replace ``$ pip install`` usage, as well as manual virtualenv management (to activate a virtualenv, run ``$ pipenv shell``)."
msgstr ""

#: ../../index.rst:95
msgid "Basic Concepts"
msgstr ""

#: ../../index.rst:97
msgid "A virtualenv will automatically be created, when one doesn't exist."
msgstr ""

#: ../../index.rst:98
msgid "When no parameters are passed to ``install``, all packages ``[packages]`` specified will be installed."
msgstr ""

#: ../../index.rst:99
msgid "To initialize a Python 3 virtual environment, run ``$ pipenv --three``."
msgstr ""

#: ../../index.rst:100
msgid "To initialize a Python 2 virtual environment, run ``$ pipenv --two``."
msgstr ""

#: ../../index.rst:101
msgid "Otherwise, whatever virtualenv defaults to will be the default."
msgstr ""

#: ../../index.rst:106
msgid "Other Commands"
msgstr ""

#: ../../index.rst:108
msgid "``graph`` will show you a dependency graph of your installed dependencies."
msgstr ""

#: ../../index.rst:109
msgid "``shell`` will spawn a shell with the virtualenv activated."
msgstr ""

#: ../../index.rst:110
msgid "``run`` will run a given command from the virtualenv, with any arguments forwarded (e.g. ``$ pipenv run python`` or ``$ pipenv run pip freeze``)."
msgstr ""

#: ../../index.rst:111
msgid "``check`` checks for security vulnerabilities and asserts that PEP 508 requirements are being met by the current environment."
msgstr ""

#: ../../index.rst:115
msgid "Further Documentation Guides"
msgstr ""

#: ../../index.rst:125
msgid "‚ò§ Pipenv Usage"
msgstr ""

#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
msgid "Options"
msgstr ""

#: ../../../pipenv:1
msgid "Output project home information."
msgstr ""

#: ../../../pipenv:1
msgid "Output virtualenv information."
msgstr ""

#: ../../../pipenv:1
msgid "Output Python interpreter information."
msgstr ""

#: ../../../pipenv:1
msgid "Output Environment Variable options."
msgstr ""

#: ../../../pipenv:1
msgid "Remove the virtualenv."
msgstr ""

#: ../../../pipenv:1
#: ../../../pipenv graph:1
#: ../../../pipenv sync:1
#: ../../../pipenv update:1
msgid "Minimal output."
msgstr ""

#: ../../../pipenv:1
msgid "Output completion (to be eval'd)."
msgstr ""

#: ../../../pipenv:1
msgid "Display manpage."
msgstr ""

#: ../../../pipenv:1
#: ../../../pipenv check:1
#: ../../../pipenv clean:1
#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv open:1
#: ../../../pipenv run:1
#: ../../../pipenv shell:1
#: ../../../pipenv sync:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Use Python 3/2 when creating virtualenv."
msgstr ""

#: ../../../pipenv:1
#: ../../../pipenv check:1
#: ../../../pipenv clean:1
#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv open:1
#: ../../../pipenv run:1
#: ../../../pipenv shell:1
#: ../../../pipenv sync:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Specify which version of Python virtualenv should use."
msgstr ""

#: ../../../pipenv:1
msgid "Enable site-packages for the virtualenv."
msgstr ""

#: ../../../pipenv:1
msgid "Show the version and exit."
msgstr ""

#: ../../../pipenv check:1
msgid "Use system Python."
msgstr ""

#: ../../../pipenv check:1
msgid "Given a code path, show potentially unused dependencies."
msgstr ""

#: ../../../pipenv check:1
msgid "Ignore specified vulnerability during safety checks."
msgstr ""

#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
#: ../../index.rst:0
msgid "Arguments"
msgstr ""

#: ../../../pipenv check:1
#: ../../../pipenv install:1
#: ../../../pipenv run:1
#: ../../../pipenv shell:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Optional argument(s)"
msgstr ""

#: ../../../pipenv clean:1
#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv sync:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Verbose mode."
msgstr ""

#: ../../../pipenv clean:1
msgid "Just output unneeded packages."
msgstr ""

#: ../../../pipenv graph:1
msgid "Output JSON."
msgstr ""

#: ../../../pipenv graph:1
msgid "Output JSON in nested tree."
msgstr ""

#: ../../../pipenv graph:1
msgid "Reversed dependency graph."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv update:1
msgid "Install package(s) in [dev-packages]."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv sync:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Specify a PyPI mirror."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv uninstall:1
msgid "System pip management."
msgstr ""

#: ../../../pipenv install:1
msgid "Import a requirements.txt file."
msgstr ""

#: ../../../pipenv install:1
msgid "Import from codebase."
msgstr ""

#: ../../../pipenv install:1
msgid "Ignore Pipfile when installing, using the Pipfile.lock."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv sync:1
#: ../../../pipenv update:1
msgid "Install dependencies one-at-a-time, instead of concurrently."
msgstr ""

#: ../../../pipenv install:1
msgid "Ignore locking mechanisms when installing‚Äîuse the Pipfile, instead."
msgstr ""

#: ../../../pipenv install:1
msgid "Abort if the Pipfile.lock is out-of-date, or Python version is wrong."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv update:1
msgid "Allow pre-releases."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv lock:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Keep out-dated dependencies from being updated in Pipfile.lock."
msgstr ""

#: ../../../pipenv install:1
msgid "Update specified packages."
msgstr ""

#: ../../../pipenv install:1
#: ../../../pipenv uninstall:1
#: ../../../pipenv update:1
msgid "Optional argument"
msgstr ""

#: ../../../pipenv lock:1
msgid "Generate output compatible with requirements.txt."
msgstr ""

#: ../../../pipenv lock:1
msgid "Generate output compatible with requirements.txt for the development dependencies."
msgstr ""

#: ../../../pipenv lock:1
#: ../../../pipenv sync:1
#: ../../../pipenv update:1
msgid "Clear the dependency cache."
msgstr ""

#: ../../../pipenv open:1
#: ../../../pipenv run:1
msgid "Required argument"
msgstr ""

#: ../../../pipenv shell:1
msgid "Run in shell in fancy mode (for elegantly configured shells)."
msgstr ""

#: ../../../pipenv shell:1
msgid "Always spawn a subshell, even if one is already spawned."
msgstr ""

#: ../../../pipenv sync:1
msgid "Additionally install package(s) in [dev-packages]."
msgstr ""

#: ../../../pipenv uninstall:1
msgid "Lock afterwards."
msgstr ""

#: ../../../pipenv uninstall:1
msgid "Un-install all package from [dev-packages]."
msgstr ""

#: ../../../pipenv uninstall:1
msgid "Purge all package(s) from virtualenv. Does not edit Pipfile."
msgstr ""

#: ../../../pipenv update:1
#: ../../../pipenv update:1
msgid "List out-of-date dependencies."
msgstr ""

#: ../../index.rst:132
msgid "Indices and tables"
msgstr ""

#: ../../index.rst:134
msgid ":ref:`genindex`"
msgstr ""

#: ../../index.rst:135
msgid ":ref:`modindex`"
msgstr ""

#: ../../index.rst:136
msgid ":ref:`search`"
msgstr ""

