# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017. A <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> Project
# This file is distributed under the same license as the pipenv package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pipenv 8.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-18 00:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: cocoatomo <cocoatomo77@gmail.com>, 2017\n"
"Language-Team: Japanese (https://www.transifex.com/cocoatomo/teams/78708/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../index.rst:7
msgid "Pipenv: Python Dev Workflow for Humans"
msgstr ""
"Pipenv: 人間のためのPython開発ワークフロー\n"
"(日本語訳: cocoatomo)"

#: ../../index.rst:23
msgid ""
"**Pipenv** — the officially recommended Python packaging tool from "
"`Python.org <https://packaging.python.org/new-tutorials/installing-and-"
"using-packages/>`_, free (as in freedom)."
msgstr ""
"**Pipenv** — `Python.org <https://packaging.python.org/new-tutorials"
"/installing-and-using-packages/>`_ が正式に推薦するPythonパッケージングツール、そして (自由としての) "
"フリー。"

#: ../../index.rst:25
msgid ""
"Pipenv is a tool that aims to bring the best of all packaging worlds "
"(bundler, composer, npm, cargo, yarn, etc.) to the Python world. *Windows is"
" a first–class citizen, in our world.*"
msgstr ""
"Pipenvは、全てのパッケージングの世界 (bundler、composer、npm、cargo、yarnなどなど。) における最高のものをPythonの世界にもたらすことを目的としたツールです。\n"
"*我々の世界ではWindowsは第一級市民です。*"

#: ../../index.rst:27
msgid ""
"It automatically creates and manages a virtualenv for your projects, as well"
" as adds/removes packages from your ``Pipfile`` as you install/uninstall "
"packages. It also generates the ever–important ``Pipfile.lock``, which is "
"used to produce deterministic builds."
msgstr ""
"Pipenvは、手動でパッケージのインストールおよびアンインストールを行うのと同じように ``Pipfile`` に対してパッケージの追加および削除を行うのに加え、自動でプロジェクト用の仮想環境を作成し管理します。\n"
"また、Pipenvはいかなるときも重要な ``Pipfile.lock`` を生成し、これは決定論的ビルドをもたらすために使われます。"

#: ../../index.rst:34
msgid "The problems that Pipenv seeks to solve are multi-faceted:"
msgstr "Pipenvは様々な側面を持つ問題を解決しようとしています:"

#: ../../index.rst:36
msgid ""
"You no longer need to use ``pip`` and ``virtualenv`` separately. They work "
"together."
msgstr ""
"もう ``pip`` と ``virtualenv`` を別々に使う必要はありません。\n"
"両者は連係して動作します。"

#: ../../index.rst:37
msgid ""
"Managing a ``requirements.txt`` file `can be problematic "
"<https://www.kennethreitz.org/essays/a-better-pip-workflow>`_, so Pipenv "
"uses the upcoming ``Pipfile`` and ``Pipfile.lock`` instead, which is "
"superior for basic use cases."
msgstr ""
"``requirements.txt`` ファイルの管理は `問題になり得る <https://www.kennethreitz.org/essays/a-better-pip-workflow>`_ ので、代わりにPipenvは来たるべき ``Pipfile`` および ``Pipfile.lock`` を使います。\n"
"これらは基本的な場面では ``requirements.txt`` に勝るものです。"

#: ../../index.rst:38
msgid ""
"Hashes are used everywhere, always. Security. Automatically expose security "
"vulnerabilities."
msgstr ""
"ハッシュがどこでもいつでも使われます。\n"
"安心安全。\n"
"そして、自動でセキュリティの脆弱性を白日の下に晒します。"

#: ../../index.rst:39
msgid "Give you insight into your dependency graph (e.g. ``$ pipenv graph``)."
msgstr "依存関係グラフに対する深い洞察を提供します (例えば ``$ pipenv graph``)。"

#: ../../index.rst:40
msgid "Streamline development workflow by loading ``.env`` files."
msgstr "``.env`` ファイルを読み込むことで、開発ワークフローの能率を上げます。"

#: ../../index.rst:44
msgid "Install Pipenv Today!"
msgstr "さぁ今日これからPipenvをインストール!"

#: ../../index.rst:46
msgid ""
"Pipenv is a python package and so can be installed using ``pip`` as you "
"would expect. ::"
msgstr "Pipenvはpythonのパッケージなので、普通に ``pip`` を使ってインストールできます。 ::"

#: ../../index.rst:52
msgid ""
"If you have excellent taste, there are various other installation methods "
"which prevent pipenv and its dependencies from interfering with the rest of "
"your Python installation. These include `Pipsi "
"<https://docs.pipenv.org/install.html#fancy-installation-of-pipenv>`_, `Nix "
"<https://docs.pipenv.org/install.html#referentially-transparent-"
"installation-of-pipenv>`_ and `Homebrew "
"<https://docs.pipenv.org/install.html#homebrew-installation-of-pipenv>`_."
msgstr ""
"もし素晴しいセンスをお持ちなら、この方法以外にもPipenvとその依存パッケージと他のインストールされているPythonが干渉しないインストール方法も色々選べます。\n"
"例えば `Pipsi <https://docs.pipenv.org/install.html#fancy-installation-of-pipenv>`_ 、 `Nix <https://docs.pipenv.org/install.html#referentially-transparent-installation-of-pipenv>`_ 、 `Homebrew <https://docs.pipenv.org/install.html#homebrew-installation-of-pipenv>`_ などの方法があります。"

#: ../../index.rst:65
msgid "User Testimonials"
msgstr "ユーザーによる推薦文"

#: ../../index.rst:68
msgid "**Jannis Leidel**, former pip maintainer—"
msgstr "**Jannis Leidel**、前pipメンテナー—"

#: ../../index.rst:68
msgid ""
"*Pipenv is the porcelain I always wanted to build for pip. It fits my brain "
"and mostly replaces virtualenvwrapper and manual pip calls for me. Use it.*"
msgstr ""
"*Pipenvは、私がpipの開発で作り上げたかった磁器だ。私の思考回路にピッタリだし、virtualenvwrapperと手作業でのpipの呼び出しのほとんどを置き換えてくれる。是非使うべきだ。*"

#: ../../index.rst:71
msgid "**Justin Myles Holmes**—"
msgstr "**Justin Myles Holmes**—"

#: ../../index.rst:71
msgid ""
"*Pipenv is finally an abstraction meant to engage the mind instead of merely"
" the filesystem.*"
msgstr ""

#: ../../index.rst:74
msgid "**Isaac Sanders**—"
msgstr "**Isaac Sanders**—"

#: ../../index.rst:74
msgid ""
"*Pipenv is literally the best thing about my day today. Thanks, Kenneth!*"
msgstr ""

#: ../../index.rst:77
msgid "☤ Pipenv Features"
msgstr "☤ Pipenvの特徴"

#: ../../index.rst:79
msgid ""
"Enables truly *deterministic builds*, while easily specifying *only what you"
" want*."
msgstr "*何をしたいか* を簡単に指定するだけで、真の *決定論的ビルド* が可能です。"

#: ../../index.rst:80
msgid "Generates and checks file hashes for locked dependencies."
msgstr "固定された依存関係のファイルハッシュを生成しチェックします。"

#: ../../index.rst:81
msgid "Automatically install required Pythons, if ``pyenv`` is available."
msgstr "``pyenv`` が使える場合は、要求されているPythonを自動でインストールします。"

#: ../../index.rst:82
msgid ""
"Automatically finds your project home, recursively, by looking for a "
"``Pipfile``."
msgstr "``Pipfile`` を探して、再帰的に、プロジェクトホームを自動で見付けに行きます。"

#: ../../index.rst:83
msgid "Automatically generates a ``Pipfile``, if one doesn't exist."
msgstr "``Pipfile`` が存在していない場合、自動で生成します。"

#: ../../index.rst:84
msgid "Automatically creates a virtualenv in a standard location."
msgstr "標準的な場所に仮想環境を自動で作成します。"

#: ../../index.rst:85
msgid ""
"Automatically adds/removes packages to a ``Pipfile`` when they are "
"un/installed."
msgstr "パッケージがインストールもしくはアンインストールされたときに、自動で ``Pipfile`` に追加および削除します。"

#: ../../index.rst:86
msgid "Automatically loads ``.env`` files, if they exist."
msgstr "``.env`` ファイルが存在する場合、自動で読み込みます。"

#: ../../index.rst:88
msgid ""
"The main commands are ``install``, ``uninstall``, and ``lock``, which "
"generates a ``Pipfile.lock``. These are intended to replace ``$ pip "
"install`` usage, as well as manual virtualenv management (to activate a "
"virtualenv, run ``$ pipenv shell``)."
msgstr ""
"主なコマンドは ``install`` 、 ``uninstall`` 、 ``lock`` で、``lock`` コマンドは ``Pipfile.lock`` を生成します。\n"
"これらは、手動での仮想環境の管理 (仮想環境を有効にするための ``$ pipenv shell`` の実行) だけでなく、 ``$ pip install`` の使用も置き換えるために作られています。"

#: ../../index.rst:91
msgid "Basic Concepts"
msgstr "基本コンセプト"

#: ../../index.rst:93
msgid "A virtualenv will automatically be created, when one doesn't exist."
msgstr "既存の仮想環境が存在しないときは、自動で作成されます。"

#: ../../index.rst:94
msgid ""
"When no parameters are passed to ``install``, all packages ``[packages]`` "
"specified will be installed."
msgstr ""
"``install`` にパラメータが何も渡されないときは、 ``[packages]`` に指定された全てのパッケージがインストールされます。"

#: ../../index.rst:95
msgid ""
"To initialize a Python 3 virtual environment, run ``$ pipenv --three``."
msgstr "Python 3の仮想環境を初期化するには、 ``$ pipenv --three`` を実行します。"

#: ../../index.rst:96
msgid "To initialize a Python 2 virtual environment, run ``$ pipenv --two``."
msgstr "Python 2の仮想環境を初期化するには、 ``$ pipenv --two`` を実行します。"

#: ../../index.rst:97
msgid "Otherwise, whatever virtualenv defaults to will be the default."
msgstr "それ以外は、virtualenvがデフォルトとしているものをPipenvのデフォルトとします。"

#: ../../index.rst:102
msgid "Other Commands"
msgstr "他のコマンド"

#: ../../index.rst:104
msgid ""
"``graph`` will show you a dependency graph, of your installed dependencies."
msgstr "``graph`` はインストールされた依存パッケージの依存関係グラフを表示します。"

#: ../../index.rst:105
msgid "``shell`` will spawn a shell with the virtualenv activated."
msgstr "``shell`` は仮想環境が有効化されたシェルを起動します。"

#: ../../index.rst:106
msgid ""
"``run`` will run a given command from the virtualenv, with any arguments "
"forwarded (e.g. ``$ pipenv run python``)."
msgstr ""
"``run`` は仮想環境から与えられたコマンドを、それに続く任意の引数で実行します (例えば ``$ pipenv run python``)。"

#: ../../index.rst:107
msgid ""
"``check`` checks for security vulnerabilities and asserts that PEP 508 "
"requirements are being met by the current environment."
msgstr "``check`` はセキュリティの脆弱性をチェックし、現在の環境がPEP 508の要求仕様を満たしていることを表明します。"

#: ../../index.rst:111
msgid "Further Documentation Guides"
msgstr "より進んだ内容のドキュメントガイド"

#: ../../index.rst:120
msgid "☤ Pipenv Usage"
msgstr "☤ Pipenvの使い方"

#: ../../index.rst:0 ../../index.rst:0 ../../index.rst:0 ../../index.rst:0
#: ../../index.rst:0 ../../index.rst:0 ../../index.rst:0 ../../index.rst:0
#: ../../index.rst:0 ../../index.rst:0
msgid "Options"
msgstr "オプション"

#: ../../../pipenv:1
msgid "Update Pipenv & pip to latest."
msgstr "Pipenvとpipを最新に更新します。"

#: ../../../pipenv:1
msgid "Output project home information."
msgstr "プロジェクトホームの情報を出力します。"

#: ../../../pipenv:1
msgid "Output virtualenv information."
msgstr "仮想環境の情報を出力します。"

#: ../../../pipenv:1
msgid "Output Python interpreter information."
msgstr "Pythonインタプリタの情報を出力します。"

#: ../../../pipenv:1
msgid "Output Environment Variable options."
msgstr "環境変数オプションを出力します。"

#: ../../../pipenv:1
msgid "Remove the virtualenv."
msgstr "仮想環境を削除します。"

#: ../../../pipenv:1 ../../../pipenv graph:1 ../../../pipenv update:1
msgid "Minimal output."
msgstr "出力を最小限にします。"

#: ../../../pipenv:1
msgid "Output completion (to be eval'd)."
msgstr ""

#: ../../../pipenv:1
msgid "Display manpage."
msgstr "マニュアルページを表示します。"

#: ../../../pipenv:1 ../../../pipenv check:1 ../../../pipenv install:1
#: ../../../pipenv lock:1 ../../../pipenv open:1 ../../../pipenv run:1
#: ../../../pipenv shell:1 ../../../pipenv uninstall:1 ../../../pipenv
#: update:1
msgid "Use Python 3/2 when creating virtualenv."
msgstr "仮想環境を作成するときにPython 3あるいはPython 2を使います。"

#: ../../../pipenv:1 ../../../pipenv check:1 ../../../pipenv install:1
#: ../../../pipenv lock:1 ../../../pipenv open:1 ../../../pipenv run:1
#: ../../../pipenv shell:1 ../../../pipenv uninstall:1 ../../../pipenv
#: update:1
msgid "Specify which version of Python virtualenv should use."
msgstr "どのバージョンのPython仮想環境を使うかを指定します。"

#: ../../../pipenv:1
msgid "Enable site-packages for the virtualenv."
msgstr "仮想環境のsite-packagesを有効にします。"

#: ../../../pipenv:1
msgid "An easter egg, effectively."
msgstr "実質的には、イースターエッグです。"

#: ../../../pipenv:1
msgid "Show the version and exit."
msgstr "バージョンを表示して終了します。"

#: ../../../pipenv check:1
msgid "Given a code path, show potentially unused dependencies."
msgstr "コードのパスが与えられると、使われていない可能性のある依存関係を表示します。"

#: ../../../pipenv check:1
msgid "Given a code path, show Flake8 errors."
msgstr "コードのパスが与えられると、Flake8のエラーを表示します。"

#: ../../index.rst:0 ../../index.rst:0 ../../index.rst:0 ../../index.rst:0
#: ../../index.rst:0 ../../index.rst:0 ../../index.rst:0
msgid "Arguments"
msgstr "引数"

#: ../../../pipenv check:1 ../../../pipenv install:1 ../../../pipenv run:1
#: ../../../pipenv shell:1 ../../../pipenv uninstall:1
msgid "Optional argument(s)"
msgstr "オプションの引数"

#: ../../../pipenv graph:1
msgid "Output JSON."
msgstr "JSONを出力します。"

#: ../../../pipenv graph:1
msgid "Reversed dependency graph."
msgstr "逆向きの依存関係グラフ。"

#: ../../../pipenv install:1
msgid "Install package(s) in [dev-packages]."
msgstr "[dev-packages] にあるパッケージをインストールします。"

#: ../../../pipenv install:1 ../../../pipenv uninstall:1
msgid "System pip management."
msgstr "システムのpipの管理。"

#: ../../../pipenv install:1
msgid "Import a requirements.txt file."
msgstr "requirements.txtファイルをインポートします。"

#: ../../../pipenv install:1
msgid "Import from codebase."
msgstr "コードからインポートします。"

#: ../../../pipenv install:1 ../../../pipenv lock:1 ../../../pipenv
#: uninstall:1 ../../../pipenv update:1
msgid "Verbose mode."
msgstr "冗長モード。"

#: ../../../pipenv install:1
msgid "Ignore Pipfile when installing, using the Pipfile.lock."
msgstr "インストール時にPipfileを無視し、Pipfile.lockを使います。"

#: ../../../pipenv install:1 ../../../pipenv update:1
msgid "Install dependencies one-at-a-time, instead of concurrently."
msgstr "並列ではなく、一度に一つずつ依存パッケージをインストールします。"

#: ../../../pipenv install:1
msgid "Ignore locking mechanisms when installing—use the Pipfile, instead."
msgstr "インストール時にバージョン固定の仕組みを無視し、代わりにPipfileを使います。"

#: ../../../pipenv install:1
msgid "Abort if the Pipfile.lock is out–of–date, or Python version is wrong."
msgstr "Pipfile.lockが古い、もしくはPythonバージョンが間違っている場合に、異常終了します。"

#: ../../../pipenv install:1 ../../../pipenv lock:1
msgid "Allow pre–releases."
msgstr "プレリリースバージョンのパッケージを許可します。"

#: ../../../pipenv install:1 ../../../pipenv uninstall:1 ../../../pipenv
#: update:1
msgid "Optional argument"
msgstr "オプションの引数"

#: ../../../pipenv lock:1
msgid "Generate output compatible with requirements.txt."
msgstr "requirements.txtと互換な出力を生成します。"

#: ../../../pipenv lock:1
msgid ""
"Generate output compatible with requirements.txt for the development "
"dependencies."
msgstr "開発用の依存パッケージのrequirements.txtと互換な出力を生成します。"

#: ../../../pipenv lock:1 ../../../pipenv update:1
msgid "Clear the dependency cache."
msgstr "依存関係のキャッシュを削除します。"

#: ../../../pipenv open:1 ../../../pipenv run:1
msgid "Required argument"
msgstr "必須の引数"

#: ../../../pipenv shell:1
msgid "Run in shell in fancy mode (for elegantly configured shells)."
msgstr "(格調高く設定されたシェルとなるよう) 高機能モードでシェルを実行します。"

#: ../../../pipenv shell:1
msgid "Always spawn a subshell, even if one is already spawned."
msgstr "サブシェルを既に起動している場合でも、常にサブシェルを起動します。"

#: ../../../pipenv uninstall:1
msgid "Lock afterwards."
msgstr "後でロックします。"

#: ../../../pipenv uninstall:1
msgid "Un-install all package from [dev-packages]."
msgstr "[dev-packages] にある全てのパッケージをアンインストールします。"

#: ../../../pipenv uninstall:1
msgid "Purge all package(s) from virtualenv. Does not edit Pipfile."
msgstr ""
"仮想環境から全てのパッケージを除去します。\n"
"Pipfileは編集しません。"

#: ../../../pipenv update:1
msgid "Additionally install package(s) in [dev-packages]."
msgstr "追加で [dev-packages] にあるパッケージをインストールします。"

#: ../../../pipenv update:1
msgid "Just output outdated packages."
msgstr "最新版でないパッケージの出力のみを行います。"

#: ../../index.rst:127
msgid "Indices and tables"
msgstr "索引と一覧表"

#: ../../index.rst:129
msgid ":ref:`genindex`"
msgstr ":ref:`genindex`"

#: ../../index.rst:130
msgid ":ref:`modindex`"
msgstr ":ref:`modindex`"

#: ../../index.rst:131
msgid ":ref:`search`"
msgstr ":ref:`search`"
